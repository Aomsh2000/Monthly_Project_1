// <auto-generated />
using System;
using HealthSystem.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HealthSystem.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250326140120_SeedingData")]
    partial class SeedingData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("HealthSystem.Models.Appointment", b =>
                {
                    b.Property<int>("AppointmentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("AppointmentDate")
                        .HasColumnType("datetime(6)");

                    b.Property<TimeSpan>("AppointmentTime")
                        .HasColumnType("time(6)");

                    b.Property<Guid>("DoctorUserID")
                        .HasColumnType("char(36)");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<Guid>("PatientUserID")
                        .HasColumnType("char(36)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("AppointmentID");

                    b.HasIndex("DoctorUserID");

                    b.HasIndex("PatientUserID");

                    b.ToTable("Appointments");

                    b.HasData(
                        new
                        {
                            AppointmentID = 1,
                            AppointmentDate = new DateTime(2025, 3, 27, 17, 1, 19, 869, DateTimeKind.Local).AddTicks(5247),
                            AppointmentTime = new TimeSpan(0, 10, 0, 0, 0),
                            DoctorUserID = new Guid("9bb75c0e-02a4-48a7-9abc-6c02b2b848db"),
                            Note = "Initial check-up appointment.",
                            PatientUserID = new Guid("8cf4a402-6456-4d0d-92ad-9231d4d3997a"),
                            Status = 0
                        },
                        new
                        {
                            AppointmentID = 2,
                            AppointmentDate = new DateTime(2025, 3, 25, 17, 1, 19, 869, DateTimeKind.Local).AddTicks(5272),
                            AppointmentTime = new TimeSpan(0, 9, 0, 0, 0),
                            DoctorUserID = new Guid("9bb75c0e-02a4-48a7-9abc-6c02b2b848db"),
                            Note = "Follow-up appointment.",
                            PatientUserID = new Guid("fa6aea75-1bc1-47dd-93b2-fb21c4ec16e0"),
                            Status = 1
                        },
                        new
                        {
                            AppointmentID = 3,
                            AppointmentDate = new DateTime(2025, 3, 29, 17, 1, 19, 869, DateTimeKind.Local).AddTicks(5273),
                            AppointmentTime = new TimeSpan(0, 14, 30, 0, 0),
                            DoctorUserID = new Guid("230ccf11-e50c-4e65-b6e1-effcff230ea3"),
                            Note = "Dermatology consultation.",
                            PatientUserID = new Guid("37a90677-e170-4b8e-84ee-70d63dfc5f0a"),
                            Status = 0
                        },
                        new
                        {
                            AppointmentID = 4,
                            AppointmentDate = new DateTime(2025, 3, 31, 17, 1, 19, 869, DateTimeKind.Local).AddTicks(5275),
                            AppointmentTime = new TimeSpan(0, 11, 0, 0, 0),
                            DoctorUserID = new Guid("0b352489-50a5-4392-8f48-26290a5ad996"),
                            Note = "Pediatric consultation for vaccination.",
                            PatientUserID = new Guid("b6165ff2-b3ef-47ea-ae51-5721d6f2868b"),
                            Status = 0
                        },
                        new
                        {
                            AppointmentID = 5,
                            AppointmentDate = new DateTime(2025, 3, 28, 17, 1, 19, 869, DateTimeKind.Local).AddTicks(5277),
                            AppointmentTime = new TimeSpan(0, 16, 0, 0, 0),
                            DoctorUserID = new Guid("26768127-9022-430d-bcb1-b261edd723f0"),
                            Note = "Orthopedic consultation for knee pain.",
                            PatientUserID = new Guid("e352360f-04db-468b-b134-6fce2e2b732f"),
                            Status = 0
                        });
                });

            modelBuilder.Entity("HealthSystem.Models.Doctor", b =>
                {
                    b.Property<Guid>("UserID")
                        .HasColumnType("char(36)");

                    b.Property<int>("Clinic")
                        .HasColumnType("int");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("Specialization")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("UserID");

                    b.ToTable("Doctors");

                    b.HasData(
                        new
                        {
                            UserID = new Guid("9bb75c0e-02a4-48a7-9abc-6c02b2b848db"),
                            Clinic = 1,
                            Gender = 0,
                            Specialization = "Cardiology"
                        },
                        new
                        {
                            UserID = new Guid("230ccf11-e50c-4e65-b6e1-effcff230ea3"),
                            Clinic = 2,
                            Gender = 1,
                            Specialization = "Dermatology"
                        },
                        new
                        {
                            UserID = new Guid("0b352489-50a5-4392-8f48-26290a5ad996"),
                            Clinic = 3,
                            Gender = 0,
                            Specialization = "Pediatrics"
                        },
                        new
                        {
                            UserID = new Guid("26768127-9022-430d-bcb1-b261edd723f0"),
                            Clinic = 4,
                            Gender = 1,
                            Specialization = "Orthopedics"
                        },
                        new
                        {
                            UserID = new Guid("4124b740-9c17-4843-a24d-6be0a13062f3"),
                            Clinic = 5,
                            Gender = 0,
                            Specialization = "Neurology"
                        });
                });

            modelBuilder.Entity("HealthSystem.Models.Patient", b =>
                {
                    b.Property<Guid>("UserID")
                        .HasColumnType("char(36)");

                    b.Property<string>("Allergies")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<int>("BloodType")
                        .HasColumnType("int");

                    b.Property<string>("ChronicDiseases")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("NationalID")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.HasKey("UserID");

                    b.ToTable("Patients");

                    b.HasData(
                        new
                        {
                            UserID = new Guid("8cf4a402-6456-4d0d-92ad-9231d4d3997a"),
                            Allergies = "Peanuts, Dust",
                            BloodType = 0,
                            ChronicDiseases = "Asthma",
                            DateOfBirth = new DateTime(1990, 5, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Gender = 1,
                            NationalID = "1234567890"
                        },
                        new
                        {
                            UserID = new Guid("fa6aea75-1bc1-47dd-93b2-fb21c4ec16e0"),
                            Allergies = "Penicillin",
                            BloodType = 7,
                            ChronicDiseases = "Diabetes",
                            DateOfBirth = new DateTime(1988, 7, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Gender = 0,
                            NationalID = "2345678901"
                        },
                        new
                        {
                            UserID = new Guid("37a90677-e170-4b8e-84ee-70d63dfc5f0a"),
                            Allergies = "Latex, Pollen",
                            BloodType = 2,
                            ChronicDiseases = "None",
                            DateOfBirth = new DateTime(1995, 3, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Gender = 0,
                            NationalID = "3456789012"
                        },
                        new
                        {
                            UserID = new Guid("b6165ff2-b3ef-47ea-ae51-5721d6f2868b"),
                            Allergies = "None",
                            BloodType = 4,
                            ChronicDiseases = "Hypertension",
                            DateOfBirth = new DateTime(1983, 12, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Gender = 1,
                            NationalID = "4567890123"
                        },
                        new
                        {
                            UserID = new Guid("e352360f-04db-468b-b134-6fce2e2b732f"),
                            Allergies = "Dust, Animal Dander",
                            BloodType = 6,
                            ChronicDiseases = "Asthma",
                            DateOfBirth = new DateTime(1992, 8, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Gender = 1,
                            NationalID = "5678901234"
                        });
                });

            modelBuilder.Entity("HealthSystem.Models.User", b =>
                {
                    b.Property<Guid>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("MiddleName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.HasKey("UserID");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserID = new Guid("490277c6-a754-4164-b87c-5d8ea1822906"),
                            Email = "areej.shareefi@email.com",
                            FirstName = "Areej",
                            LastName = "Shareefi",
                            MiddleName = "Osama",
                            Password = "AdminPassword123",
                            PhoneNumber = "9876543210",
                            Role = 0
                        },
                        new
                        {
                            UserID = new Guid("8cf4a402-6456-4d0d-92ad-9231d4d3997a"),
                            Email = "alice.smith@email.com",
                            FirstName = "Alice",
                            LastName = "Smith",
                            MiddleName = "Marie",
                            Password = "PatientPassword123",
                            PhoneNumber = "3216549870",
                            Role = 2
                        },
                        new
                        {
                            UserID = new Guid("fa6aea75-1bc1-47dd-93b2-fb21c4ec16e0"),
                            Email = "bob.johnson@email.com",
                            FirstName = "Bob",
                            LastName = "Johnson",
                            MiddleName = "John",
                            Password = "PatientPassword456",
                            PhoneNumber = "4321657890",
                            Role = 2
                        },
                        new
                        {
                            UserID = new Guid("37a90677-e170-4b8e-84ee-70d63dfc5f0a"),
                            Email = "charlie.brown@email.com",
                            FirstName = "Charlie",
                            LastName = "Brown",
                            MiddleName = "David",
                            Password = "PatientPassword789",
                            PhoneNumber = "5432168970",
                            Role = 2
                        },
                        new
                        {
                            UserID = new Guid("b6165ff2-b3ef-47ea-ae51-5721d6f2868b"),
                            Email = "david.williams@email.com",
                            FirstName = "David",
                            LastName = "Williams",
                            MiddleName = "Lee",
                            Password = "PatientPassword101",
                            PhoneNumber = "6543210987",
                            Role = 2
                        },
                        new
                        {
                            UserID = new Guid("e352360f-04db-468b-b134-6fce2e2b732f"),
                            Email = "emma.taylor@email.com",
                            FirstName = "Emma",
                            LastName = "Taylor",
                            MiddleName = "Grace",
                            Password = "PatientPassword202",
                            PhoneNumber = "7654321098",
                            Role = 2
                        },
                        new
                        {
                            UserID = new Guid("9bb75c0e-02a4-48a7-9abc-6c02b2b848db"),
                            Email = "james.wilson@email.com",
                            FirstName = "James",
                            LastName = "Wilson",
                            MiddleName = "Edward",
                            Password = "DoctorPassword123",
                            PhoneNumber = "8765432109",
                            Role = 1
                        },
                        new
                        {
                            UserID = new Guid("230ccf11-e50c-4e65-b6e1-effcff230ea3"),
                            Email = "sophia.davis@email.com",
                            FirstName = "Sophia",
                            LastName = "Davis",
                            MiddleName = "Ann",
                            Password = "DoctorPassword456",
                            PhoneNumber = "9876543211",
                            Role = 1
                        },
                        new
                        {
                            UserID = new Guid("0b352489-50a5-4392-8f48-26290a5ad996"),
                            Email = "michael.martinez@email.com",
                            FirstName = "Michael",
                            LastName = "Martinez",
                            MiddleName = "Ray",
                            Password = "DoctorPassword789",
                            PhoneNumber = "1234567891",
                            Role = 1
                        },
                        new
                        {
                            UserID = new Guid("26768127-9022-430d-bcb1-b261edd723f0"),
                            Email = "olivia.lopez@email.com",
                            FirstName = "Olivia",
                            LastName = "Lopez",
                            MiddleName = "Marie",
                            Password = "DoctorPassword101",
                            PhoneNumber = "2345678901",
                            Role = 1
                        },
                        new
                        {
                            UserID = new Guid("4124b740-9c17-4843-a24d-6be0a13062f3"),
                            Email = "ethan.hernandez@email.com",
                            FirstName = "Ethan",
                            LastName = "Hernandez",
                            MiddleName = "James",
                            Password = "DoctorPassword202",
                            PhoneNumber = "3456789012",
                            Role = 1
                        });
                });

            modelBuilder.Entity("HealthSystem.Models.WorkingHours", b =>
                {
                    b.Property<int>("WorkingHoursID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Day")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("EndTime")
                        .HasColumnType("time(6)");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("time(6)");

                    b.Property<Guid>("UserID")
                        .HasColumnType("char(36)");

                    b.HasKey("WorkingHoursID");

                    b.HasIndex("UserID");

                    b.ToTable("WorkingHours");

                    b.HasData(
                        new
                        {
                            WorkingHoursID = 1,
                            Day = 1,
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            StartTime = new TimeSpan(0, 9, 0, 0, 0),
                            UserID = new Guid("9bb75c0e-02a4-48a7-9abc-6c02b2b848db")
                        },
                        new
                        {
                            WorkingHoursID = 2,
                            Day = 2,
                            EndTime = new TimeSpan(0, 16, 0, 0, 0),
                            StartTime = new TimeSpan(0, 10, 0, 0, 0),
                            UserID = new Guid("230ccf11-e50c-4e65-b6e1-effcff230ea3")
                        },
                        new
                        {
                            WorkingHoursID = 3,
                            Day = 3,
                            EndTime = new TimeSpan(0, 14, 0, 0, 0),
                            StartTime = new TimeSpan(0, 9, 0, 0, 0),
                            UserID = new Guid("0b352489-50a5-4392-8f48-26290a5ad996")
                        },
                        new
                        {
                            WorkingHoursID = 4,
                            Day = 4,
                            EndTime = new TimeSpan(0, 18, 0, 0, 0),
                            StartTime = new TimeSpan(0, 11, 0, 0, 0),
                            UserID = new Guid("26768127-9022-430d-bcb1-b261edd723f0")
                        },
                        new
                        {
                            WorkingHoursID = 5,
                            Day = 5,
                            EndTime = new TimeSpan(0, 15, 0, 0, 0),
                            StartTime = new TimeSpan(0, 8, 0, 0, 0),
                            UserID = new Guid("4124b740-9c17-4843-a24d-6be0a13062f3")
                        });
                });

            modelBuilder.Entity("HealthSystem.Models.Appointment", b =>
                {
                    b.HasOne("HealthSystem.Models.Doctor", "Doctor")
                        .WithMany("Appointments")
                        .HasForeignKey("DoctorUserID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("HealthSystem.Models.Patient", "Patient")
                        .WithMany("Appointments")
                        .HasForeignKey("PatientUserID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Doctor");

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("HealthSystem.Models.Doctor", b =>
                {
                    b.HasOne("HealthSystem.Models.User", "User")
                        .WithOne("Doctor")
                        .HasForeignKey("HealthSystem.Models.Doctor", "UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("HealthSystem.Models.Patient", b =>
                {
                    b.HasOne("HealthSystem.Models.User", "User")
                        .WithOne("Patient")
                        .HasForeignKey("HealthSystem.Models.Patient", "UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("HealthSystem.Models.WorkingHours", b =>
                {
                    b.HasOne("HealthSystem.Models.Doctor", "Doctor")
                        .WithMany("WorkingHours")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Doctor");
                });

            modelBuilder.Entity("HealthSystem.Models.Doctor", b =>
                {
                    b.Navigation("Appointments");

                    b.Navigation("WorkingHours");
                });

            modelBuilder.Entity("HealthSystem.Models.Patient", b =>
                {
                    b.Navigation("Appointments");
                });

            modelBuilder.Entity("HealthSystem.Models.User", b =>
                {
                    b.Navigation("Doctor")
                        .IsRequired();

                    b.Navigation("Patient")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
